from alpaca_trade_api.rest import RESTfrom alpaca.secrets import APCA_API_KEY_ID, APCA_API_SECRET_KEY, BASE_URLimport mathapi = REST(APCA_API_KEY_ID, APCA_API_SECRET_KEY, BASE_URL)def get_account_info():    account = api.get_account()    cash = float(account.cash)    buying_power = float(account.buying_power)    return cash, buying_powerdef get_open_positions():    try:        positions = api.list_positions()        return {p.symbol: float(p.qty) for p in positions}    except:        return {}def execute_trade(symbol, action, price):    open_positions = get_open_positions()    cash, buying_power = get_account_info()    # Parameters for risk control    max_position_count = 5    min_cash_reserve = 500    risk_per_trade = 0.1  # Max 10% of total cash per trade    min_price_threshold = 5  # Don't trade penny stocks    # Skip duplicate buy    if action == "buy":        if symbol in open_positions:            return f"⚠️ Already holding {symbol}, skipping buy."        if price < min_price_threshold:            return f"⚠️ Skipping low-priced stock {symbol} (${price})"        max_risk_amount = cash * risk_per_trade        if cash < min_cash_reserve or max_risk_amount < price:            return f"⚠️ Not enough cash to safely buy {symbol}"        qty = math.floor(max_risk_amount / price)        if qty < 1:            return f"⚠️ Risk rules allow 0 shares of {symbol}"        try:            api.submit_order(                symbol=symbol,                qty=qty,                side='buy',                type='market',                time_in_force='gtc'            )            return f"✅ Alpaca: Bought {qty} shares of {symbol} at ${price}"        except Exception as e:            return f"❌ Buy failed for {symbol}: {e}"    elif action == "sell":        if symbol not in open_positions:            return f"⚠️ No holdings in {symbol} to sell."        qty = int(open_positions[symbol])        try:            api.submit_order(                symbol=symbol,                qty=qty,                side='sell',                type='market',                time_in_force='gtc'            )            return f"✅ Alpaca: Sold {qty} shares of {symbol} at ${price}"        except Exception as e:            return f"❌ Sell failed for {symbol}: {e}"    return f"ℹ️ Held {symbol}"